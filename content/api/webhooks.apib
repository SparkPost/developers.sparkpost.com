FORMAT: 1A
title: Webhooks
description: Manage webhooks, which enable you to receive push updates of the raw events generated by SparkPost.

# Group Webhooks

[Webhooks](https://en.wikipedia.org/wiki/Webhook) allow us to push raw events we collect about your emails over to your servers. Batches of events are delivered through a POST request to the defined target URL. You can use this endpoint to create and manage webhooks, or you can create one from the [app](https://app.sparkpost.com/webhooks/create) ([EU](https://app.eu.sparkpost.com/webhooks/create)).

### Batch Information

* Any webhook batch that does not receive an HTTP 200 response will be retried for a total of 8 hours before the data is discarded.
* Each webhook batch contains the header `X-MessageSystems-Batch-ID`, which is useful for auditing and prevention of processing duplicate batches.
* Webhooks posting to your endpoint will timeout after 10 seconds. For best results, write webhook batches to disk and then process asynchronously to minimize data loss if you have a problem with your database.

## Webhooks Object

+ Data Structure: Attributes
    + name (string) - Name for webhook
    + target (string) - URL of the target to which to POST event batches. 
    + events (array)  - Array of event types this webhook will send. Use the [Events Documentation](#webhooks-documentation-get) endpoint to list the available event types.
    + active (boolean) - The status of the webhook. When false, the target will no longer receive batches.
    + custom_headers (object) - Object of custom headers to be used during POST requests to target.
    + auth_type (enum) - Type of authentication to be used during POST requests to target. Read more about [webhook authentication](https://www.sparkpost.com/docs/tech-resources/webhook-authentication/#webhook-authentication-set-up).
        + none
        + basic
        + oauth2
    + auth_request_details (object) - Object containing details needed to request authorization token for OAuth 2.0. This is required when `auth_type` is oauth2.
        + url (string, required) - The URL for the authorization server.
        + body (object, required) - The body to send in the request to the authorization server. This likely should contain the client ID, client secret, and grant type. 
    + `auth_credentials` (object) - Object containing credentials needed to make authorized POST requests for Basic Authentication. This is required when `auth_type` is basic. When `auth_type` is oauth2, it is generated from `auth_request_details`.
        + username (string, required) - The username for Basic Authentication.
        + password (string) - The password for Basic Authentication.
    + auth_token (string)
        <span class="label label-danger"><strong>Deprecated</strong></span> in favor of the `auth_type` field. <br /> Authentication token to present in the `X-MessageSystems-Webhook-Token` header of POST requests to target.
+ Sample
        
    ```
    {
        "name": "Example webhook",
        "target": "http://client.example.com/example-webhook",
        "events": ["delivery", "injection", "open", "click"],
        "active": true,
        "custom_headers": {
            "x-api-key": "abcd"
        },
        "auth_type": "basic",
        "auth_credentials": {
            "username": "basicauthuser",
            "password": "mypassword"
        }
    }
    ```


<br/>
___

__The SparkPost Webhooks API uses MaxMind software [MaxMind License](https://www.maxmind.com/download/geoip/database/LICENSE.txt)__

### Create a Webhook [POST /webhooks]

When a webhook is created, a test POST request is sent to the `target` URL. If this request does not receive an HTTP 200 response, your request to the Webhook API will fail with HTTP 400 and the webhook will not be created. If created successfully, the webhook will begin to receive event data after 1 minute.

+ Data Structure
    + name (string, required) - Name for webhook
    + target (string, required) - URL of the target to which to POST event batches. 
    + events (array, required)  - Array of event types this webhook will send. Use the [Events Documentation](#webhooks-documentation-get) endpoint to list the available event types.
    + active (boolean) - The status of the webhook. When false, the target will no longer receive batches.
        + Default: true
    + custom_headers (object) - Object of custom headers to be used during POST requests to target.
    + auth_type: none, basic, oauth2 (enum)
        Type of authentication to be used during POST requests to target. Read more about [webhook authentication](https://www.sparkpost.com/docs/tech-resources/webhook-authentication/#webhook-authentication-set-up).
        + Default: none
    + auth_request_details (object) - Object containing details needed to request authorization token for OAuth 2.0. This is required when `auth_type` is oauth2.
        + url (string, required) - The URL for the authorization server.
        + body (object, required) - The body to send in the request to the authorization server. This likely should contain the client ID, client secret, and grant type. 
    + `auth_credentials` (object) - Object containing credentials needed to make authorized POST requests for Basic Authentication. This is required when `auth_type` is basic. When `auth_type` is oauth2, it is generated from `auth_request_details`.
        + username (string, required) - The username for Basic Authentication.
        + password (string) - The password for Basic Authentication.


+ Request (application/json)

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf

    + Body

            {
                "name": "Example webhook",
                "target": "http://client.example.com/example-webhook",
                "custom_headers": {
                    "x-api-key": "abcd"
                },
                "auth_type": "oauth2",
                "auth_request_details": {
                    "url": "http://client.example.com/tokens",
                    "body": {
                        "client_id": "CLIENT123",
                        "client_secret": "9sdfj791d2bsbf",
                        "grant_type": "client_credentials"
                    }
                },
                "events": [
                    "delivery",
                    "injection",
                    "open",
                    "click"
                ]
            }

+ Response 200 (application/json)

        {
            "results": {
                "id": "12affc24-f183-11e3-9234-3c15c2c818c2",
                "links": [
                    {
                        "href": "/api/v1/webhooks/12affc24-f183-11e3-9234-3c15c2c818c2",
                        "rel": "urn.msys.webhooks.webhook",
                        "method": [ "GET", "PUT" ]
                    }
                ]
            }
        }

+ Response 400 (application/json)

        {
            "errors": [
                {
                    "code": 400,
                    "message": "POST to webhook tokens URL failed",
                    "response": {
                        "body": "response body",
                        "headers": {
                            "connection": "close",
                            "content-length": "536",
                            "content-type": "text/html; charset=iso-8859-1"
                        },
                        "status": 502
                    }
                }
            ]
        }

### Validate a Webhook [POST /webhooks/{id}/validate]

The validation request sends an example message event batch the target URL, validates that the target responds with HTTP 200,
and returns information on the response received from the target.


#### Sample Batch

```
[
  {
    "msys": {}
  }
]
```



+ Parameters
    + id (required, uuid, `12affc24-f183-11e3-9234-3c15c2c818c2`)

+ Request (application/json)

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf

    + Body

        [
            {
                "msys": {}
            }
        ]

+ Response 200 (application/json)

        {
            "results": {
                "msg": "Test POST to endpoint succeeded",
                "response": {
                    "status": 200,
                    "headers": {
                        "Content-Type": "text/plain"
                    },
                    "body": "OK"
                }
            }
        }

### Retrieve a Webhook [GET /webhooks/{id}{?timezone}]

+ Parameters
    + id (required, uuid, `12affc24-f183-11e3-9234-3c15c2c818c2`)
    + timezone =`UTC` (optional, string, `America/New_York`) ... Standard timezone identification string.

+ Request

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf
            Accept: application/json

+ Response 200 (application/json)

        {
            "results": {
                "name": "Example webhook",
                "target": "http://client.example.com/example-webhook",
                "events": [
                    "delivery",
                    "injection",
                    "open",
                    "click"
                ],
                "auth_type": "oauth2",
                "auth_request_details": {
                    "url": "https://oauth.myurl.com/tokens",
                    "body": {
                        "client_id": "<oauth client id>",
                        "client_secret": "<oauth client secret>"
                    }
                },
                "auth_credentials": {
                    "access_token": "<oauth token>",
                    "expires_in": 3600
                },
                "auth_token": "",
                "custom_headers": {
                    "x-api-key": "abcd"
                },
                "active": true,
                "links": [
                    {
                        "href": "/api/v1/webhooks/12affc24-f183-11e3-9234-3c15c2c818c2/validate",
                        "rel": "urn.msys.webhooks.validate",
                        "method": ["POST"]
                    },
                    {
                        "href": "/api/v1/webhooks/12affc24-f183-11e3-9234-3c15c2c818c2/batch-status",
                        "rel": "urn.msys.webhooks.batches",
                        "method": ["GET"]
                    }
                ]
            }
        }


### Retrieve Batch Status Information [GET /webhooks/{id}/batch-status{?limit}]

Returns the status information for the batches that have been generated. Status information includes the successes of batches that previously failed to reach the webhook's target URL and batches that are currently in a failed state.

+ Parameters
    + id (required, uuid, `12affc24-f183-11e3-9234-3c15c2c818c2`)
    + limit = 1000 (optional, int, `1000`) ... Maximum number of results to return.

+ Request

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf
            Accept: application/json

+ Response 200 (application/json)

    
        {
            "results": [
                {
                    "batch_id": "032d330540298f54f0e8bcc1373f3cfd",
                    "ts": "2014-07-30T21:38:08.000Z",
                    "attempts": 7,
                    "response_code": "200",
                    "latency": 160
                },
                {
                    "batch_id": "13c6764994a8f6b4e29906d5712ca7d",
                    "ts": "2014-07-30T20:38:08.000Z",
                    "attempts": 2,
                    "failure_code": "400",
                    "response_code": "400",
                    "latency": 210
                }
            ]
        }


### Update a Webhook [PUT /webhooks/{id}]

+ Data Structure
    + name (string) - Name for webhook
    + target (string) - URL of the target to which to POST event batches. 
    + events (array)  - Array of event types this webhook will send. Use the [Events Documentation](#webhooks-documentation-get) endpoint to list the available event types.
    + active (boolean) - The status of the webhook. When false, the target will no longer receive batches.
    + custom_headers (object) - Object of custom headers to be used during POST requests to target.
    + auth_type: none, basic, oauth2 (enum)
        Type of authentication to be used during POST requests to target. Read more about [webhook authentication](https://www.sparkpost.com/docs/tech-resources/webhook-authentication/#webhook-authentication-set-up).
    + auth_request_details (object) - Object containing details needed to request authorization token for OAuth 2.0. This is required when `auth_type` is oauth2.
        + url (string, required) - The URL for the authorization server.
        + body (object, required) - The body to send in the request to the authorization server. This likely should contain the client ID, client secret, and grant type. 
    + `auth_credentials` (object) - Object containing credentials needed to make authorized POST requests for Basic Authentication. This is required when `auth_type` is basic. When `auth_type` is oauth2, it is generated from `auth_request_details`.
        + username (string, required) - The username for Basic Authentication.
        + password (string) - The password for Basic Authentication.

If you change to the `target` URL, a test POST request will be sent. If this request does not receive an HTTP 200 response, your request to the Webhooks API will fail with HTTP 400, and the webhook will not be updated.

Any batches already queued for delivery to this webhook will not be affected. For example, if you change the webhook's target URL, batches already queued for delivery will still be POSTed to the previous URL.

+ Parameters
    + id (required, uuid, `12affc24-f183-11e3-9234-3c15c2c818c2`)

+ Request (application/json)

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf

    + Body

            {
                "name": "Renamed webhook",
                "events": [
                    "rejection",
                    "delay"
                ],
                "auth_type": "none",
                "custom_headers": {
                    "x-api-key": "abcd"
                }
            }

+ Response 200 (application/json)

        {
            "results": {
                "id": "12affc24-f183-11e3-9234-3c15c2c818c2",
                "links": [
                    {
                        "href": "/api/v1/webhooks/12affc24-f183-11e3-9234-3c15c2c818c2/validate",
                        "rel": "urn.msys.webhooks.validate",
                        "method": ["POST"]
                    }
                ]
            }
        }



### Delete a Webhook [DELETE /webhooks/{id}]

This will not affect any webhook batches that are already queued for delivery.

+ Parameters
    + id (required, uuid, `12affc24-f183-11e3-9234-3c15c2c818c2`)

+ Request

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf

+ Response 204


### List all Webhooks [GET /webhooks{?timezone}]

Returns a list of all your webhooks.

+ Parameters
    + timezone =`UTC` (optional, string, `America/New_York`) ... Standard timezone identification string.

+ Request

    + Headers

            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "results": [
                    {
                        "id": "a2b83490-10df-11e4-b670-c1ffa86371ff",
                        "name": "Some webhook",
                        "target": "http://client.example.com/some-webhook",
                        "events": [
                            "delivery",
                            "injection",
                            "open",
                            "click"
                        ],
                        "auth_type": "basic",
                        "auth_request_details": {

                        },
                        "auth_credentials": {
                            "username": "basicuser",
                            "password": "somepass"
                        },
                        "auth_token": "",
                        "last_successful": "2014-08-01 16:09:15",
                        "last_failure": "2014-06-01 15:15:45",
                        "custom_headers": {
                            "x-api-key": "abcd"
                        },
                        "active": true,
                        "links": [
                            {
                                "href": "/api/v1/webhooks/a2b83490-10df-11e4-b670-c1ffa86371ff",
                                "rel": "urn.msys.webhooks.webhook",
                                "method": [
                                    "GET",
                                    "PUT"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "12affc24-f183-11e3-9234-3c15c2c818c2",
                        "name": "Example webhook",
                        "target": "http://client.example.com/example-webhook",
                        "events": [
                            "delivery",
                            "injection",
                            "open",
                            "click"
                        ],
                        "auth_type": "oauth2",
                        "auth_request_details": {
                            "url": "https://oauth.myurl.com/tokens",
                            "body": {
                                "client_id": "<oauth client id>",
                                "client_secret": "<oauth client secret>"
                            }
                        },
                        "auth_credentials": {
                            "access_token": "<oauth token>",
                            "expires_in": 3600
                        },
                        "auth_token": "",
                        "last_successful": "2014-07-01 16:09:15",
                        "last_failure": "2014-08-01 15:15:45",
                        "active": true,
                        "links": [
                            {
                                "href": "/api/v1/webhooks/12affc24-f183-11e3-9234-3c15c2c818c2",
                                "rel": "urn.msys.webhooks.webhook",
                                "method": [
                                    "GET",
                                    "PUT"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "123456-abcd-efgh-7890-123445566778",
                        "name": "Another webhook",
                        "target": "http://client.example.com/another-example",
                        "events": [
                            "generation_rejection",
                            "generation_failure"
                        ],
                        "auth_type": "none",
                        "auth_request_details": {

                        },
                        "auth_credentials": {

                        },
                        "auth_token": "5ebe2294ecd0e0f08eab7690d2a6ee69",
                        "active": true,
                        "links": [
                            {
                                "href": "/api/v1/webhooks/123456-abcd-efgh-7890-123445566778",
                                "rel": "urn.msys.webhooks.webhook",
                                "method": [
                                    "GET",
                                    "PUT"
                                ]
                            }
                        ]
                    }
                ]
            }




## Documentation [/webhooks/events/documentation] 

### Events Documentation [GET]

Returns a list of descriptions of the events, event types, and event fields that could be included in a webhooks batches to your target URL.

+ Request

    + Headers

            Accept: application/json

+ Response
    
    {
      "results": {
        "message_event": { ... },
        "track_event": { ... },
        ...
      }
    }


### Event Samples [GET /webhooks/events/samples{?events}]

Returns an example of the event data that will be posted by a webhook for the specified events.

The data that will arrive at your target URL during normal operation (as opposed to calls to this endpoint) will <strong>not</strong> contain the top level <code>results</code> key shown in the example response.

+ Parameters
    + events (optional, string, `bounce`) ... Event types for which to get a sample payload, use the [Events Documentation](#webhooks-documentation-get) endpoint to list the available event types, defaults to all event types.

+ Request

    + Headers

            Accept: application/json


+ Response
    
    {
      "results": [
        {
          "msys": {
            "message_event": { ... }
          }
        }
      ]
    }
