FORMAT: 1A
title: Inbound Domains
description: Manage inbound domains, which enable you to receive emails.

# Group Inbound Domains

Inbound Domains allow you to receive emails using SparkPost.
When combined with [Relay Webhooks](/api/relay-webhooks/), SparkPost can parse the emails sent to the inbound domain and post their contents to your server.

## Configuring MX records

In order to use an inbound domain, you will need to add MX records to your DNS settings.
The DNS settings required depend on whether you have a US, EU, Enterprise account.

### US Accounts

| Name               | Type | Data                  | Priority |
|--------------------|------|-----------------------|----------|
| `<inbound domain>` | MX   | rx1.sparkpostmail.com | 10       |
| `<inbound domain>` | MX   | rx2.sparkpostmail.com | 10       |
| `<inbound domain>` | MX   | rx3.sparkpostmail.com | 10       |

### EU Accounts

| Name               | Type | Data                     | Priority |
|--------------------|------|--------------------------|----------|
| `<inbound domain>` | MX   | rx1.eu.sparkpostmail.com | 10       |
| `<inbound domain>` | MX   | rx2.eu.sparkpostmail.com | 10       |
| `<inbound domain>` | MX   | rx3.eu.sparkpostmail.com | 10       |

### Enterprise Accounts

Enterprise MX records are specific to each account.
They usually follow the format of `<tenant>.mx.e.sparkpost.com`, where `<tenant>` is unique to your account.
Please check with your TAM if you are unsure of the setting in your own environment.

| Name               | Type | Data                           | Priority |
|--------------------|------|--------------------------------|----------|
| `<inbound domain>` | MX   | `<tenant>.mx.e.sparkpost.com`  | 10       |

## Inbound Domain Object

+ Data Structure
    + domain (string) - Domain (or subdomain) name for which SparkPost will receive inbound emails. Your DNS provider's MX record for this domain must point back to SparkPost.
+ Sample

    ```
    {
        "domain": "indbound.example.com"
    }
    ```

### Create an Inbound Domain [POST /v1/inbound-domains]

+ Data Structure
    + domain (string, required) - Domain name for which SparkPost will receive inbound emails.


+ Request (application/json)

    + Body

            {
              "domain": "indbound.example.com"
            }

+ Response 200

+ Response 409 (application/json)

    + Body

            {
                "errors": [
                    {
                        "message": "resource conflict",
                        "description": "An inbound domain with similar attributes already exists",
                        "code": "1602"
                    }
                ]
            }

### Retrieve an Inbound Domain [GET /v1/inbound-domains/{domain}]

+ Parameters
    + domain: `indbound.example.com` (string, required)

+ Request

+ Response 200 (application/json)

    + Body

            {
                "results": {
                    "domain": "indbound.example.com"
                }
            }

+ Response 404 (application/json)

    + Body

            {
                "errors": [
                    {
                        "message": "resource not found",
                        "code": "1600"
                    }
                ]
            }


### Delete an Inbound Domain [DELETE /v1/inbound-domains/{domain}]

+ Parameters
    + domain: `indbound.example.com` (string, required)

+ Request

+ Response 200

+ Response 404 (application/json)

    + Body

            {
                "errors": [
                    {
                        "message": "resource not found",
                        "code": "1600"
                    }
                ]
            }

+ Response 409 (application/json)

    + Body

            {
                "errors": [
                    {
                        "message": "resource conflict",
                        "description": "Domain currently being used in a relay-webhook. Please delete the relay-webhook first.",
                        "code": "1602"
                    }
                ]
            }


### List all Inbound Domains [GET /v1/inbound-domains]

Returns an array with all your inbound domains.

+ Request

+ Response 200 (application/json)

    + Body

            {
                "results": [
                    {
                        "domain": "indbound.example.com"
                    },
                    {
                        "domain": "inbounddomain2.test.com"
                    }
                ]
            }
