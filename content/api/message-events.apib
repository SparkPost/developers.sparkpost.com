FORMAT: 1A
title: Message Events
description: Query detailed message event data for further analysis and processing.

# Group Message Events

The Message Events API allows searching for recent events, and supports various types of result filtering. Available events include message status – injection, delivery, bounce – as well as recipient engagement – clicks and opens. You can fetch all event types or only specific ones, such as bounces, deliveries, or clicks. You can also filter by date range, campaign, or just about any other field. It provides access to the same event data that gets delivered to you through [webhooks](/api/webhooks).

### Data retention

Message event data is retained for 10 days and is generally available within 1 minute. Aggregate reporting data is available through [metrics](/api/metrics) or the app for up to 6 months.

*Note:* The maximum URI length is 4096 characters so please keep your message events queries below that size.

___

__The SparkPost Message Events API uses MaxMind software [MaxMind License](https://www.maxmind.com/download/geoip/database/LICENSE.txt)__


### Search for Message Events [GET /message-events{?recipients,friendly_froms,events,bounce_classes,reason,subaccounts,transmission_ids,campaign_ids,template_ids,ab_test_ids,message_ids,timezone,to,from,page,per_page,delimiter}]

Returns a list of message events that matched the filtered search. The response is sorted by descending timestamp.

+ Parameters
    + recipients (optional, list, `recipient@example.com`) ... Delimited list of recipients to search.
    + friendly_froms (optional, list) ... Delimited list of friendly from emails to search. 
    + events (optional, list) ... Delimited list of event types to search. Defaults to all event types.
    + bounce_classes (optional, number) ... Delimited list of bounce classification codes to search. See [Bounce Classification Codes](https://www.sparkpost.com/docs/deliverability/bounce-classification-codes/).
    + reason (optional, string) ... Bounce/failure/rejection reason that will be matched using a wildcard (e.g., %reason%).
    + subaccounts (optional, list) ... Delimited list of subaccount IDs to search.
    + transmission_ids (optional, list) ... Delimited list of transmission IDs to search.
    + campaign_ids (optional, string) ... Delimited list of campaign IDs to search.
    + template_ids (optional, list, `templ-1234`) ... Delimited list of template IDs to search.
    + ab_test_ids (optional, list) ... Delimited list of A/B test IDs to search.
    + message_ids (optional, list) ... Delimited list of message IDs to search.
    + timezone =`UTC` (optional, string) ... Standard timezone identification string.
    + to (datetime, optional) - Datetime in format of YYYY-MM-DDTHH:MM.
        + Default: `1 minute ago`
    + from (datetime, optional) - Datetime in format of YYYY-MM-DDTHH:MM.
        + Default: `24 hours ago`
    + page = `1` (optional, number) ... The results page number to return. Used with per_page for paging through results.
    + per_page = `1000` (optional, number, `1`) ... Number of results to return per page. Must be between 1 and 10,000 (inclusive).
    + delimiter = `,` (optional, string) ... Specifies the delimiter for query parameter lists.

+ Request

  + Headers

            Accept: application/json
            Authorization: 14ac5499cfdd2bb2859e4476d2e5b1d2bad079bf

+ Response
    
        {
            "results": [
                {
                    "type": "click",
                    "campaign_id": "Example Campaign Name",
                    "customer_id": "1",
                    "delv_method": "esmtp",
                    "event_id": "92356927693813856",
                    "friendly_from": "sender@example.com",
                    "injection_time": "2016-04-18T14:25:07.000Z",
                    "ip_address": "127.0.0.1",
                    "ip_pool": "Example-Ip-Pool",
                    "message_id": "000443ee14578172be22",
                    "msg_from": "sender@example.com",
                    "msg_size": "1337",
                    "num_retries": "2",
                    "queue_time": "12",
                    "rcpt_meta": {
                        "customKey": "customValue"
                    },
                    "rcpt_tags": [
                        "male",
                        "US"
                    ],
                    "rcpt_to": "recipient@example.com",
                    "raw_rcpt_to": "recipient@example.com",
                    "rcpt_type": "cc",
                    "routing_domain": "example.com",
                    "sending_ip": "127.0.0.1",
                    "subaccount_id": "101",
                    "subject": "Summer deals are here!",
                    "target_link_name": "Example Link Name",
                    "target_link_url": "http://example.com",
                    "template_id": "templ-1234",
                    "template_version": "1",
                    "timestamp": "2016-04-18T14:25:07.000+00:00",
                    "transmission_id": "65832150921904138",
                    "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.118 Safari/537.36",
                    "geo_ip": {
                        "country": "US",
                        "region": "MD",
                        "city": "Columbia",
                        "latitude": 39.1749,
                        "longitude": -76.8375
                    }
                }
            ]
        }

## Documentation [/message-events/events/documentation]

### Events Documentation [GET]

Returns a list of descriptions of the event fields that could be included in a response from the message events search. Fields will vary by event type.

+ Request

    + Headers

            Accept: application/json

+ Response

    ```
    {
      "results": [
        {
          "type": {
            "description": "Type of event this record describes",
            "sampleValue": "bounce"
          },
          "bounce_class": {
            "description": "Classification code for a given message (see [Bounce Classification Codes](https://support.sparkpost.com/customer/portal/articles/1929896))",
            "sampleValue": "1"
          },
          ...
        },
        ...
      ]
    }
    ```



### Events Samples [GET /message-events/events/samples{?events}]

Returns an example message event for each event type listed in the `events` parameter.

+ Parameters
    + events (optional, string, `bounce`) ... Event types for which to get a sample payload. Defaults to all event types. Use the [Webhooks Documentation](/api/webhooks/#webhooks-get-events-documentation-get) endpoint to list the available event types.

+ Request

  + Headers

            Accept: application/json

+ Response

    ```
    {
      "results": [
        {
          "type": "bounce",
          "bounce_class": "1",
          "campaign_id": "Example Campaign Name",
          ...
        }
      ]
    }
    ```
